-- Create a role type for members
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'member_role') THEN
        CREATE TYPE public.member_role AS ENUM ('admin', 'member');
    END IF;
END$$;


-- Create a table for establishment members
CREATE TABLE IF NOT EXISTS public.miembros_establecimiento (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  establecimiento_id UUID REFERENCES public.establecimientos(id) ON DELETE CASCADE NOT NULL,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  role public.member_role DEFAULT 'member'::public.member_role NOT NULL,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  UNIQUE(establecimiento_id, user_id)
);
COMMENT ON TABLE public.miembros_establecimiento IS 'Manages user membership and roles within establishments.';

-- Function to add establishment owner as an admin member automatically
CREATE OR REPLACE FUNCTION public.add_owner_as_admin_member()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.miembros_establecimiento (establecimiento_id, user_id, role)
  VALUES (NEW.id, NEW.owner_id, 'admin');
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Trigger to execute the function upon new establishment creation
DROP TRIGGER IF EXISTS on_establishment_created ON public.establecimientos;
CREATE TRIGGER on_establishment_created
  AFTER INSERT ON public.establecimientos
  FOR EACH ROW EXECUTE PROCEDURE public.add_owner_as_admin_member();

-- Add 'establecimiento_id' to existing tables
ALTER TABLE public.users ADD COLUMN IF NOT EXISTS establecimiento_id UUID REFERENCES public.establecimientos(id) ON DELETE SET NULL;
ALTER TABLE public.pacientes ADD COLUMN IF NOT EXISTS establecimiento_id UUID REFERENCES public.establecimientos(id) ON DELETE CASCADE;
ALTER TABLE public.profesionales ADD COLUMN IF NOT EXISTS establecimiento_id UUID REFERENCES public.establecimientos(id) ON DELETE CASCADE;
ALTER TABLE public.practicas ADD COLUMN IF NOT EXISTS establecimiento_id UUID REFERENCES public.establecimientos(id) ON DELETE CASCADE;

-- Comments for new columns
COMMENT ON COLUMN public.users.establecimiento_id IS 'The establishment this user profile belongs to.';
COMMENT ON COLUMN public.pacientes.establecimiento_id IS 'The establishment this patient belongs to.';
COMMENT ON COLUMN public.profesionales.establecimiento_id IS 'The establishment this professional belongs to.';
COMMENT ON COLUMN public.practicas.establecimiento_id IS 'The establishment this practice belongs to.';

